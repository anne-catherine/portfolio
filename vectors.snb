{"metadata":{"name":"vectors","user_save_timestamp":"1969-12-31T19:00:00.000Z","auto_save_timestamp":"1969-12-31T19:00:00.000Z","language_info":{"name":"scala","file_extension":"scala","codemirror_mode":"text/x-scala"},"trusted":true,"customLocalRepo":null,"customRepos":null,"customDeps":null,"customImports":null,"customArgs":null,"customSparkConf":null},"cells":[{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"6C13B12E27CB448280CF7C1DAE321FCA"},"cell_type":"code","source":"import org.apache.spark.mllib.feature.Word2Vec\nimport org.apache.spark.mllib.feature.Word2VecModel\nimport scala.io.Source\n","outputs":[{"name":"stdout","output_type":"stream","text":"import org.apache.spark.mllib.feature.Word2Vec\nimport org.apache.spark.mllib.feature.Word2VecModel\nimport scala.io.Source\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":4,"time":"Took: 1 second 808 milliseconds, at 2016-12-19 21:57"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"62252B3E4891472B9C0BC31BA04D2D18"},"cell_type":"code","source":"\nval f = \"/Users/annethompson/Desktop/Parsed.Corpus.txt\"\nval lines  = Source.fromFile(f).getLines.toVector\n\nval wds = lines.map(l => l.split(\" \").filterNot(_.isEmpty))\nval pairLists = wds.map(ar => ar.sliding(1).toVector.map {pair => pair.mkString(\"_\")}) \n                    \nval input = sc.parallelize(pairLists)","outputs":[{"name":"stdout","output_type":"stream","text":"f: String = /Users/annethompson/Desktop/Parsed.Corpus.txt\nlines: Vector[String] = Vector(\"lex33116.1_littera  C Caesaris lex18103.1_consul  lex45009.1_reddo  lex10313.1_aegreo _aegrum lex10298.1_aeger  lex9104.1_ab  lex27244.1_hic  lex28357.1_impetro lex28355.1_impetratus  lex50141.1_sum1 lex22274.1_edo1  lex50520.1_superus lex50146.1_summa lex50190.1_summum  lex52181.1_tribunus  lex41161.1_plebs lex41175.1_pleo  lex18205.1_contentio  lex53023.1_ut  lex28556.1_in  lex47584.1_senatus  lex44879.1_recito  lex53023.1_ut  lex53544.1_vero2 lex53608.1_verum2 lex53607.1_verum lex53611.1_verus  lex23489.1_ex  lex33116.1_littera  lex9671.1_ad  lex47584.1_senatus  lex45089.1_refero  lex28357.1_impetro  lex36503.1_non  lex41607.1_possum  lex45089.1_refero  lex18103.1_consul lex18109.1_consulo  lex1..."},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":5,"time":"Took: 3 seconds 591 milliseconds, at 2016-12-19 21:58"}]},{"metadata":{"id":"B4E043BD1BAC4BE1A7D7E7943734A563"},"cell_type":"markdown","source":"In the model below, the cosine of the angle between the word vector \"plebs\" (plebeians) and the word vector \"amicus\" (friend) is 0.85. Since the cosine of 0Â° is 1, the closer the cosine value is to 1, the smaller the angle between the two word vectors. Word vectors with the smallest angle between them are the most similar. So, since 0.85 is very close to 1, the angle between \"plebs\" and \"amicus\" is small, and the terms are similar. By similar I mean that \"plebs\" and \"amicus\" cluster close in vector space because they tend to occur with the same words as each other in the corpus. I'm assuming that if two different words tend to occur in respective contexts composed of the same words, the two words must also share some semantic similarity. \n\nGiven Caesar's political alignment with the Populares (the populist patricians), one would expect that he would write favorably of the \"plebs\" (the common people) in _Commentarii de Bello Civili_. The following model confirms this positive association, as \"amicus\" (friend) is the word vector 'synonym' closest and thus most similar to the word vector \"plebs\" (plebeians) in the vector space. Thus, this model suggests that Caesar wrote about the plebeians in the same fond manner as he wrote about his friends. In this way, by highlighting Caesar's affinity for the plebeians, the model below gives quanitfiable evidence of a populist theme in _Commentarii de Bello Civili_."},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"3C3CBBF623E84AFE8DA227EAB3C39CC7"},"cell_type":"code","source":"val word2vec = new Word2Vec()\nval model = word2vec.fit(input)\nval neighbors = 10\n\n\nval word = \"lex41161.1_plebs\"\n\nval synonyms = model.findSynonyms (word,neighbors)\nfor ((synonym, cosineSimilarity) <- synonyms) {\nprintln(s\"$synonym $cosineSimilarity\")\n\n}","outputs":[{"name":"stdout","output_type":"stream","text":"lex11152.1_amicus 0.8490163608889325\nlex36629.1_novissimus 0.8430921106432188\nlex37858.1_operio 0.8277572290281692\nlex23790.1_exerceo 0.8122227606355464\nlex46800.1_satum 0.8043267882563025\n_novissimi 0.8032373744246087\nlex45335.1_remex 0.7942953189406781\nlex46762.1_sata 0.7854440929721151\nlex36785.1_nuntius 0.7821846064283478\nlex46780.1_satis 0.7799421771785954\nword2vec: org.apache.spark.mllib.feature.Word2Vec = org.apache.spark.mllib.feature.Word2Vec@448bb796\nmodel: org.apache.spark.mllib.feature.Word2VecModel = org.apache.spark.mllib.feature.Word2VecModel@74f2191f\nneighbors: Int = 10\nword: String = lex41161.1_plebs\nsynonyms: Array[(String, Double)] = Array((lex11152.1_amicus,0.8490163608889325), (lex36629.1_novissimus,0.8430921106432188), (lex37858.1_operio,0.8277572290281692), (lex23790.1_exerceo,0.8122227606355464), (lex46800.1_satum,0.8043267882563025), (_novissimi,0.8032373744246087), (lex45335.1_remex,0.7942953189406781), (lex46762.1_sata,0.7854440929721151), (lex36785.1_nuntius,0.7821846064283478), (lex46780.1_satis,0.7799421771785954))\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":25,"time":"Took: 4 seconds 819 milliseconds, at 2016-12-17 14:39"}]},{"metadata":{"id":"EF96E405EBB24928BCB977CD9E172508"},"cell_type":"raw","source":"The cell below further establishes the populist tone of Caesar's _Commentarii de Bello Civili_. Here, the word vector of the comparative adjective \"potior\", which can be construed as \"dearer\" or \"more preferable\", clusters quite close in vector space to the word vector \"civitas\"(citzenship, citizenry), with a very substantial cosine similarity of 0.93. In other words, out of all of the angles between the word vector \"potior\" and all the other word vectors in the corpus, the angle between the word vectors \"potior\" and \"civitas\" is one of the smallest. This small angle represents the similarity of the two words in this corpus. Thus, this model suggests that the way in which Caesar wrote about something that was \"potior\" (\"dearer\" or \"more preferable\") is very similar to the way in which he wrote about \"civitas\" (citizenry, citizenship). This implies that Casear endeavored to depict himself as holding \"civitas\" (citizenry, citizenship) in high regard, as would befit a populist politician.  "},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"81D5F5138293462889613A5FD9FC5502"},"cell_type":"code","source":"val word2vec = new Word2Vec()\nval model = word2vec.fit(input)\nval neighbors = 15\n\n\nval word = \"lex41713.1_potior\"\n\nval synonyms = model.findSynonyms (word,neighbors)\nfor ((synonym, cosineSimilarity) <- synonyms) {\nprintln(s\"$synonym $cosineSimilarity\")\n\n}","outputs":[{"name":"stdout","output_type":"stream","text":"lex15915.1_civitas 0.9303790574879257\nlex11457.1_animus 0.9175055634267557\nlex45211.1_regnum 0.9091395788693188\nlex22580.1_eligo 0.909077098528111\nlex36403.1_nitor1 0.9047809607333815\nlex16838.1_commuto 0.9020945380850014\nlex38126.1_orior 0.8957395150651154\nlex51962.1_transeo 0.8895710277820061\nMassiliensium 0.8890403868263191\nlex43316.1_propius 0.8887858759395731\nItaliae 0.8851466730651499\nlex31998.1_juvo 0.8808094190968911\nlex34164.1_materia 0.8779525827159835\nlex42743.1_princeps 0.8719596956015275\nlex41174.1_plenus 0.8705652807679842\nword2vec: org.apache.spark.mllib.feature.Word2Vec = org.apache.spark.mllib.feature.Word2Vec@789888c8\nmodel: org.apache.spark.mllib.feature.Word2VecModel = org.apache.spark.mllib.feature.Word2VecModel@408b42fd\nneighbors: Int = 15\nword: String = lex41713.1_potior\nsynonyms: Array[(String, Double)] = Array((lex15915.1_civitas,0.9303790574879257), (lex11457.1_animus,0.9175055634267557), (lex45211.1_regnum,0.9091395788693188), (lex22580.1_eligo,0.909077098528111), (lex36403.1_nitor1,0.9047809607333815), (lex16838.1_commuto,0.9020945380850014), (lex38126.1_orior,0.8957395150651154), (lex51962.1_transeo,0.8895710277820061), (Massiliensium,0.8890403868263191), (lex43316.1_propius,0.8887858759395731), (Italiae,0.8851466730651499), (lex31998.1_juvo,0.8808094190968911), (lex34164.1_materia,0.877952..."},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":52,"time":"Took: 3 seconds 243 milliseconds, at 2016-12-17 18:1"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":true,"id":"489828BA852D4B96882710A4AE01E4E9"},"cell_type":"markdown","source":"In the cell below, the cosine of the angle between the word vector \"lex21081.1\\_dignitas\" and \"lex24665.1\\_familiaris\" is close to 1, at about 0.847. This indicates that Caesar's use of the _dignitas_ resembles his use of _familiaris_ in his _Commentarii de Bello Civili_ is similar. _Familiaris_ is an adjective or noun that means \"intimate, of the family\" as an adjective, and \"member of the household\" as a noun. Since this model shows that _dignitas_ and _familiaris_ share some synonymity, one infers that the word _dignitas_ must also possess some of the personal, domestic quality that characterizes the word _familiares_. Therefore, if _dignitas_ does have a private, personal aspect, one would hardly expect Caesar to write to a public audience about how his _dignitas_ had always been his first objective. In this manner, the following result lends credibility to the argument that the genitive _rei publicae_ does belong in 1.9, for if _dignitas_ was a private matter, Caesar would likely not supply his personal _dignitas_ as the primary motivation for his actions. This is not to say that Casear would not have been obsessed with preservering his _dignitas_, but if, as this model suggests, _dignitas_ was a man's personal and private affair, one suspects that Caesar would not cite it as his first objective in a commentary written for others to read."},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"31D49AB8874743798B6486B1A4BC0AAE"},"cell_type":"code","source":"val word2vec = new Word2Vec()\nval model = word2vec.fit(input)\nval neighbors = 10\n\n\nval word = \"lex21081.1_dignitas\"\n\nval synonyms = model.findSynonyms (word,neighbors)\nfor ((synonym, cosineSimilarity) <- synonyms) {\nprintln(s\"$synonym $cosineSimilarity\")\n\n}","outputs":[{"name":"stdout","output_type":"stream","text":"lex24665.1_familiaris 0.8466667841533482\nlex26439.1_gladium 0.8210214044111089\nlex20571.1_despero 0.7813744396795956\nlex44271.1_quam 0.7339180681757742\nRomae 0.7273851808585303\nlex44537.1_quis2 0.7265644012762433\nlex45313.1_remaneo 0.7179878528788176\nVarro 0.7139488224314159\nlex43026.1_profugio 0.7103599620307333\n_cujus 0.7065215567293844\nword2vec: org.apache.spark.mllib.feature.Word2Vec = org.apache.spark.mllib.feature.Word2Vec@1fb525e\nmodel: org.apache.spark.mllib.feature.Word2VecModel = org.apache.spark.mllib.feature.Word2VecModel@5618748b\nneighbors: Int = 10\nword: String = lex21081.1_dignitas\nsynonyms: Array[(String, Double)] = Array((lex24665.1_familiaris,0.8466667841533482), (lex26439.1_gladium,0.8210214044111089), (lex20571.1_despero,0.7813744396795956), (lex44271.1_quam,0.7339180681757742), (Romae,0.7273851808585303), (lex44537.1_quis2,0.7265644012762433), (lex45313.1_remaneo,0.7179878528788176), (Varro,0.7139488224314159), (lex43026.1_profugio,0.7103599620307333), (_cujus,0.7065215567293844))\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":6,"time":"Took: 5 seconds 538 milliseconds, at 2016-12-19 20:51"}]},{"metadata":{"id":"0A68FCFB73034C3FB8B4232BDF313244"},"cell_type":"markdown","source":"In the cell below, two word vectors of particular interest are _gladius_ (sword), and _dignitas_ (prestige, dignity). The fact that _gladius_ appears as a synonym of _libertas_ suggests that freedom requires an aspect of violence, or combat, either to enforce or maintain freedom. It's difficult to know how to interpret that result. Furthermore, the appearance of _dignitas_ indicates that there must be some semantic overlap between the concept of _dignitas_ and _libertas_ in Caesar's _Commentarii de Bello Civili_. I suspect that _dignitas_ may have entailed, or enabled, a certain amount of personal freedom, autonomy. An indivual with prestige and dignity could likely take certain liberties and enjoy more personal freedom than an ordinary commoner. This provides some insight into the complex, untranslatable concept of _dignitas_."},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":false,"id":"8921E5A42E7943869D729ABFA11F97FF"},"cell_type":"code","source":"val word2vec = new Word2Vec()\nval model = word2vec.fit(input)\nval neighbors = 10\n\n\nval word = \"lex32822.1_libertas\"\n\nval synonyms = model.findSynonyms (word,neighbors)\nfor ((synonym, cosineSimilarity) <- synonyms) {\nprintln(s\"$synonym $cosineSimilarity\")\n}\n","outputs":[{"name":"stdout","output_type":"stream","text":"lex26440.1_gladius 0.7133818869744136\nlex45470.1_repentinus 0.6398815716859502\nlex45686.1_respicio 0.6348848452354562\nlex21081.1_dignitas 0.6221934101287113\nlex44542.1_quisque 0.6013621738976355\nlex27887.1_ignoro 0.5973368916305024\nlex47804.1_sermo 0.5786995123544127\nlex18019.1_conspicor 0.5772910025384139\nlex16675.1_commemoro 0.5729962375551765\nlex47269.1_secundum 0.5723216256750446\nword2vec: org.apache.spark.mllib.feature.Word2Vec = org.apache.spark.mllib.feature.Word2Vec@2eaef8f2\nmodel: org.apache.spark.mllib.feature.Word2VecModel = org.apache.spark.mllib.feature.Word2VecModel@6d63d701\nneighbors: Int = 10\nword: String = lex32822.1_libertas\nsynonyms: Array[(String, Double)] = Array((lex26440.1_gladius,0.7133818869744136), (lex45470.1_repentinus,0.6398815716859502), (lex45686.1_respicio,0.6348848452354562), (lex21081.1_dignitas,0.6221934101287113), (lex44542.1_quisque,0.6013621738976355), (lex27887.1_ignoro,0.5973368916305024), (lex47804.1_sermo,0.5786995123544127), (lex18019.1_conspicor,0.5772910025384139), (lex16675.1_commemoro,0.5729962375551765), (lex47269.1_secundum,0.5723216256750446))\n"},{"metadata":{},"data":{"text/html":""},"output_type":"execute_result","execution_count":30,"time":"Took: 3 seconds 286 milliseconds, at 2016-12-19 22:9"}]},{"metadata":{"trusted":true,"input_collapsed":false,"collapsed":true,"id":"1711FC94C1864069BA748CF10B7332ED"},"cell_type":"code","source":"","outputs":[]}],"nbformat":4}